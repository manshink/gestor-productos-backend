<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carrito</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Carrito</h1>
        
        {{#if cart.products.length}}
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                        <th>Subtotal</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each cart.products}}
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="{{this.product.thumbnail}}" alt="{{this.product.title}}" style="width: 50px; margin-right: 10px;">
                                <div>
                                    <h6 class="mb-0">{{this.product.title}}</h6>
                                    <small class="text-muted">{{this.product.category}}</small>
                                </div>
                            </div>
                        </td>
                        <td>${{this.product.price}}</td>
                        <td>
                            <div class="input-group" style="width: 120px;">
                                <button class="btn btn-outline-secondary" onclick="updateQuantity('{{this.product._id}}', {{this.quantity}} - 1)">-</button>
                                <input type="number" class="form-control text-center" value="{{this.quantity}}" min="1" onchange="updateQuantity('{{this.product._id}}', this.value)">
                                <button class="btn btn-outline-secondary" onclick="updateQuantity('{{this.product._id}}', {{this.quantity}} + 1)">+</button>
                            </div>
                        </td>
                        <td>${{multiply this.product.price this.quantity}}</td>
                        <td>
                            <button class="btn btn-danger btn-sm" onclick="removeProduct('{{this.product._id}}')">
                                Eliminar
                            </button>
                        </td>
                    </tr>
                    {{/each}}
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Total:</strong></td>
                        <td><strong>${{total}}</strong></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="d-flex justify-content-between mt-4">
            <button class="btn btn-danger" onclick="clearCart()">Vaciar carrito</button>
            <a href="/products" class="btn btn-primary">Seguir comprando</a>
        </div>
        {{else}}
        <div class="text-center py-5">
            <h3>Tu carrito está vacío</h3>
            <p>¡Agrega algunos productos para comenzar a comprar!</p>
            <a href="/products" class="btn btn-primary">Ver productos</a>
        </div>
        {{/if}}
    </div>

    <script>
        async function updateQuantity(productId, quantity) {
            if (quantity < 1) return;
            try {
                const response = await fetch(`/api/carts/{{cart._id}}/products/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ quantity: parseInt(quantity) })
                });
                if (response.ok) {
                    window.location.reload();
                }
            } catch (error) {
                alert('Error al actualizar la cantidad');
            }
        }

        async function removeProduct(productId) {
            if (!confirm('¿Estás seguro de que quieres eliminar este producto?')) return;
            try {
                const response = await fetch(`/api/carts/{{cart._id}}/products/${productId}`, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    window.location.reload();
                }
            } catch (error) {
                alert('Error al eliminar el producto');
            }
        }

        async function clearCart() {
            if (!confirm('¿Estás seguro de que quieres vaciar el carrito?')) return;
            try {
                const response = await fetch(`/api/carts/{{cart._id}}`, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    window.location.reload();
                }
            } catch (error) {
                alert('Error al vaciar el carrito');
            }
        }
    </script>
</body>
</html> 